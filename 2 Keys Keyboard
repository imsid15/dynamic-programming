//https://leetcode.com/problems/2-keys-keyboard/description/
//RECURSION
class Solution {
public:
    int solve(int n,int store,int total){
        if(total>n)return 1e9;
        if(total==n){
            return 0;
        }
        long long a=1+solve(n,store,total+store);
        long long b=2+solve(n,total,total+total);
        return min(a,b);
    }
    int minSteps(int n) {
        if(n==1)return 0;
        return 1+solve(n,1,1);
    }
};
//MEMOIZATION
class Solution {
public:
    int solve(int n,int store,int total,vector<vector<int>>&dp){
        if(total>n)return 1e9;
        if(total==n){
            return 0;
        }
        if(dp[store][total]!=-1)return dp[store][total];
        long long a=1+solve(n,store,total+store,dp);
        long long b=2+solve(n,total,total+total,dp);
        return dp[store][total]=min(a,b);
    }
    int minSteps(int n) {
        if(n==1)return 0;
        vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        return 1+solve(n,1,1,dp);
    }
};
