//https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/
class Solution {
public:
    int solve(vector<int>&prices,int buy,int index,vector<vector<int>>&dp){
        int n=prices.size();
        if(index==n)return 0;
        if(dp[index][buy]!=-1)return dp[index][buy];
        int ans;
        if(buy==1){
            int b=-prices[index]+solve(prices,0,index+1,dp);
            int nb=solve(prices,1,index+1,dp);
            ans=max(b,nb);
        }
        else{
            int s=prices[index]+solve(prices,1,index+1,dp);
            int ns=solve(prices,0,index+1,dp);
            ans=max(s,ns);
        }
        return dp[index][buy]=ans;
    }
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        vector<vector<int>>dp(n,vector<int>(2,-1));
        return solve(prices,1,0,dp);
    }
};
