//https://www.codingninjas.com/studio/problems/printing-longest-increasing-subsequence_8360670?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTab=0
#include<bits/stdc++.h>
vector<int>solve(vector<int> &arr, int n){
    vector<int>ans;
    vector<int>hash(n);
    for(int i=0;i<n;i++){
        hash[i]=i;
    }
    vector<int>dp(n,1);
    for(int i=0;i<n;i++){
        for(int j=0;j<=i-1;j++){
            if(arr[j]<arr[i] && 1+dp[j]>dp[i]){
                dp[i]=1+dp[j];
                hash[i]=j;
       }
        }
    }
    int index=-1;
    int maxi=-1;
    for(int i=0;i<n;i++){
        if(dp[i]>maxi){
            maxi=dp[i];
            index=i;
        }
    }
    ans.push_back(arr[index]);
    while(hash[index]!=index){
        index=hash[index];
        ans.push_back(arr[index]);
    }
    reverse(ans.begin(),ans.end());
    return ans;
}
vector<int> printingLongestIncreasingSubsequence(vector<int> arr, int n) {
    return solve(arr,n);
}
