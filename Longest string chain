//https://leetcode.com/problems/longest-string-chain/description/

class Solution {
public:
    bool compare(string &s1,string &s2){
        if(s1.size()!=s2.size()+1)return false;
        int a=0;
        int b=0;
        while(a<s1.size()){
            if(b<s2.size() && s1[a]==s2[b]){
                a++;
                b++;
            }
            else{
                a++;
            }
        }
        if(a==s1.size() && b==s2.size())return true;
        return false;
    }
    static bool cmp(string &s1,string &s2){
        return s1.size()<s2.size();
    }
    int longestStrChain(vector<string>& words) {
        int n=words.size();
        vector<int>dp(n,1);
        sort(words.begin(),words.end(),cmp);
        for(int i=0;i<n;i++){
            for(int j=0;j<=i-1;j++){
                if(dp[j]+1>dp[i] && compare(words[i],words[j])){
                    dp[i]=dp[j]+1;
                }
            }
        }
        int maxi=1;
        for(int i=0;i<n;i++){
            maxi=max(maxi,dp[i]);
        }
        return maxi;
    }
};
